{"version":3,"sources":["./src/app/confirmation/confirmation.component.ts","./src/app/confirmation/confirmation.component.html","./src/environments/environment.ts","./src/app/app.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/new/new.component.ts","./src/app/new/new.component.html","./src/app/app.module.ts","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.css']\n})\nexport class ConfirmationComponent implements OnInit {\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ok(): void {\n    this.dialogRef.close(\"ok\");\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) {}\n\n  ngOnInit(): void {}\n\n}\n","<div mat-dialog-content>\n  <h3>Maximum allowed image upload is less than 50 KB. Do you want to compress the image?</h3>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button (click)=\"onNoClick()\">\n    <mat-icon>cancel</mat-icon> No Thanks\n  </button>\n  <button\n    mat-raised-button\n    style=\"background-color: #242437; color: white\"\n    (click)=\"ok()\"\n  >\n    <mat-icon>check_circle</mat-icon> Yes\n  </button>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n  dburl = '/api/';\n\n  public listXls(): Observable<any> {\n    return this.http.get<any>(this.dburl + 'xls/list');\n  }\n\n  public listImg(): Observable<any> {\n    return this.http.get<any>(this.dburl + 'img/list');\n  }\n\n  public uploadXls(xls): Observable<any> {\n    return this.http.post<any>(this.dburl + 'xls/upload', xls);\n  }\n\n  public uploadImg(img): Observable<any> {\n    return this.http.post<any>(this.dburl + 'img/upload', img);\n  }\n\n  constructor(private http: HttpClient) {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div class=\"navbar-brand\">File Upload</div>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarText\"\n    aria-controls=\"navbarText\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/xlsx\">Excel</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/img\">Image</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n<main>\n  <router-outlet></router-outlet>\n</main>\n<footer>\n  <nav class=\"navbar fixed-bottom navbar-light bg-light\">\n    <div class=\"mx-auto\">Powered by File Upload ©2010-2021.</div>\n  </nav>\n</footer>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { AppService } from '../app.service';\nimport ImageCompressor from 'image-compressor.js';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ConfirmationComponent } from '../confirmation/confirmation.component';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css'],\n})\nexport class NewComponent implements OnInit {\n  newForm = this.fb.group({\n    uri: ['', Validators.required],\n  });\n\n  file: File = null;\n\n  onSubmit() {\n    console.log('file updated <<<< ', this.file);\n    const fd = new FormData();\n    console.log(\"file <<< \", localStorage.getItem(\"file\"));\n    fd.append('uri', this.file, this.file.name);\n    let obs;\n    if (this.data === 'xlsx') {\n      obs = this.appService.uploadXls(fd);\n    } else if (this.data === 'img') {\n      obs = this.appService.uploadImg(fd);\n    }\n    obs.subscribe(\n      (res) => {\n        this.dialogRef.close(true);\n      },\n      (err) => {\n        this.snackbar.open(\"File name already exists.\", null, {\n          duration: 2000,\n          verticalPosition: 'top',\n          horizontalPosition: 'right',\n          panelClass: ['.snackbar-style'],\n        })\n      }\n    );\n  }\n\n  compressImage(fileVal) {\n    new ImageCompressor(fileVal, {\n      quality: 0,\n      success(result) {\n        console.log('compressed file', result);\n        this.file = result;\n      },\n      error(e) {\n        console.log(\"error << \", e);\n      },\n    });\n  }\n\n  onFilePicked(event) {\n    let fileVal = <File>event.target.files[0];\n    if (this.data === 'img' && fileVal.size > 50000) {\n      const dialogRef = this.dialog.open(ConfirmationComponent, {\n        width: '60%',\n        disableClose: true,\n      });\n\n      dialogRef.afterClosed().subscribe((result) => {\n        if (result !== undefined) {\n          this.compressImage(fileVal);\n        } else {\n          this.newForm.value.uri = \"\";\n          this.snackbar.open(\"No compression is happened. Please upload a different file.\", null, {\n            duration: 2000,\n            verticalPosition: 'top',\n            horizontalPosition: 'right',\n            panelClass: ['.snackbar-style'],\n          });\n        }\n      });\n    } else {\n      this.file = fileVal;\n    }\n    console.log('file', this.file);\n  }\n\n  get uri() {\n    return this.newForm.get('uri');\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<NewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private appService: AppService,\n    public dialog: MatDialog,\n    private snackbar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"row\">\n  <div class=\"col-lg-11\">\n    <h2 mat-dialog-title *ngIf=\"data === 'xlsx'; else fail\">Upload Excel</h2>\n    <ng-template #fail>\n      <h2 mat-dialog-title>Upload Image</h2>\n    </ng-template>\n  </div>\n  <div class=\"col-lg-1\">\n    <button\n      mat-button\n      class=\"close-icon pull-right\"\n      mat-dialog-close\n      style=\"background-color: white\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n</div>\n<hr />\n<form [formGroup]=\"newForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"row\">\n    <div class=\"col-lg-6\">\n      <div class=\"form-group\" *ngIf=\"data === 'xlsx'; else faildata\">\n        <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">\n          Upload Excel\n        </button>\n        <input\n          type=\"file\"\n          accept=\".xlsx, .xls\"\n          #filePicker\n          multiple\n          (change)=\"onFilePicked($event)\"\n          required\n          formControlName=\"uri\"\n        />\n        <div\n          *ngIf=\"uri.invalid && (uri.dirty || uri.touched)\"\n          class=\"alert alert-danger\"\n        >\n          <div *ngIf=\"uri.errors.required\">\n            Please upload excel file to proceed.\n          </div>\n        </div>\n      </div>\n      <ng-template #faildata>\n        <div class=\"form-group\">\n          <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">\n            Upload Image\n          </button>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            #filePicker\n            multiple\n            (change)=\"onFilePicked($event)\"\n            required\n            formControlName=\"uri\"\n          />\n          <div\n            *ngIf=\"uri.invalid && (uri.dirty || uri.touched)\"\n            class=\"alert alert-danger\"\n          >\n            <div *ngIf=\"uri.errors.required\">\n              Please upload image file to proceed.\n            </div>\n          </div>\n        </div>\n      </ng-template>\n      <br />\n      <button\n        mat-button\n        type=\"submit\"\n        [disabled]=\"newForm.invalid\"\n        style=\"background-color: #242437; color: white\"\n      >\n        Submit\n      </button>\n    </div>\n    <div class=\"col-lg-6\"></div>\n  </div>\n</form>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListComponent } from './list/list.component';\nimport { NewComponent } from './new/new.component';\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    NewComponent,\n    ConfirmationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    MatSnackBarModule,\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AppService } from '../app.service';\nimport { NewComponent } from '../new/new.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css'],\n})\nexport class ListComponent implements OnInit {\n  upload = 'xlsx';\n  displayedColumns: string[] = ['sno', 'name'];\n\n  dataSource = new MatTableDataSource([]);\n\n  uploadMethod() {\n    const dialogRef = this.dialog.open(NewComponent, {\n      width: '80%',\n      disableClose: true,\n      data: this.upload,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result !== undefined) {\n        this.commonMethod();\n      }\n    });\n  }\n\n  commonMethod() {\n    let obs;\n    if (this.router.url === '/' || this.router.url === '/xlsx') {\n      this.upload = 'xlsx';\n      obs = this.appService.listXls();\n    } else if (this.router.url === '/img') {\n      this.upload = 'img';\n      obs = this.appService.listImg();\n    }\n    obs.subscribe(\n      (res) => {\n        let data: any = res;\n        data.forEach((_element, index) => {\n          data[index].sno = index + 1;\n        });\n        this.dataSource = new MatTableDataSource(data);\n      },\n      (err) => {\n        console.log('err', err);\n      }\n    );\n  }\n\n  constructor(\n    public dialog: MatDialog,\n    private appService: AppService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.commonMethod();\n  }\n}\n","<div class=\"row set-margin\">\n  <div class=\"col-lg-10\"></div>\n  <div class=\"col-lg-2\">\n    <button\n      mat-button\n      mat-dialog-close\n      style=\"background-color: #242437; color: white\"\n      (click)=\"uploadMethod()\"\n    >\n      <div *ngIf=\"upload === 'xlsx'; else fail\">Upload Excel</div>\n      <ng-template #fail>\n        <div>Upload Image</div>\n      </ng-template>\n    </button>\n  </div>\n</div>\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"sno\">\n      <th mat-header-cell *matHeaderCellDef>S.No</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.sno }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>File Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from './list/list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListComponent,\n  },\n  {\n    path: 'xlsx',\n    component: ListComponent,\n  },\n  {\n    path: 'img',\n    component: ListComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
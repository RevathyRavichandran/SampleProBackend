{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/delete/delete.component.ts","webpack:///src/app/delete/delete.component.html","webpack:///src/app/edit/edit.component.html","webpack:///src/app/edit/edit.component.ts","webpack:///src/app/google-map/google-map.component.ts","webpack:///src/app/google-map/google-map.component.html","webpack:///src/app/view/view.component.ts","webpack:///src/app/view/view.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","dialog","appService","displayedColumns","dataSource","dialogRef","open","width","disableClose","data","afterClosed","subscribe","result","undefined","commonMethod","getAllLabs","res","forEach","_element","index","sno","err","console","log","createLab","selector","templateUrl","styleUrls","AppModule","apiKey","declarations","providers","bootstrap","schemas","AppService","http","dburl","weburl","apikey","get","lab","post","put","headers","country","state","lat","lng","providedIn","DeleteComponent","close","deleteLabById","onNoClick","ok","EditComponent","fb","labForm","group","labname","required","email","gstno","area","contactname","websiteurl","serviceathome","landmark","contactnopri","registerno","labservices","city","contactnosec","panno","packagecost","pincode","updateLab","value","getStates","states","getCities","cities","setValue","getLabById","_id","__v","val","loadState","loadCity","getCountries","countries","onSubmit","loadArea","GoogleMapComponent","zone","map","addListener","run","latLng","getAddress","submit","mapReadyHandler","ViewComponent","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { AppService } from \"./app.service\";\nimport { DeleteComponent } from \"./delete/delete.component\";\nimport { EditComponent } from \"./edit/edit.component\";\nimport { ViewComponent } from \"./view/view.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  displayedColumns: string[] = [\n    \"sno\",\n    \"labname\",\n    \"contactname\",\n    \"contactnopri\",\n    \"email\",\n    \"action\",\n  ];\n\n  dataSource = new MatTableDataSource([]);\n\n  editMethod(id) {\n    const dialogRef = this.dialog.open(EditComponent, {\n      width: \"80%\",\n      disableClose: true,\n      data: {\n        id: id,\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result !== undefined) {\n        this.commonMethod();\n      }\n    });\n  }\n\n  viewMethod(id) {\n    const dialogRef = this.dialog.open(ViewComponent, {\n      width: \"80%\",\n      disableClose: true,\n      data: {\n        id: id,\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result !== undefined) {\n      }\n    });\n  }\n\n  deleteMethod(id) {\n    const dialogRef = this.dialog.open(DeleteComponent, {\n      width: \"500px\",\n      disableClose: true,\n      data: {\n        id: id,\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result !== undefined) {\n        this.commonMethod();\n      }\n    });\n  }\n\n  commonMethod() {\n    this.appService.getAllLabs().subscribe(\n      (res) => {\n        let data: any = res;\n        data.forEach((_element, index) => {\n          data[index].sno = index + 1;\n        });\n        this.dataSource = new MatTableDataSource(data);\n      },\n      (err) => {\n        console.log(\"err\", err);\n      }\n    );\n  }\n\n  createLab() {\n    const dialogRef = this.dialog.open(EditComponent, {\n      width: \"80%\",\n      disableClose: true,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result !== undefined) {\n        this.commonMethod();\n      }\n    });\n  }\n\n  constructor(public dialog: MatDialog, private appService: AppService) {}\n\n  ngOnInit() {\n    this.commonMethod();\n  }\n}\n","<div class=\"row set-margin\">\n  <div class=\"col-lg-10\"></div>\n  <div class=\"col-lg-2\">\n    <button\n      mat-button\n      mat-dialog-close\n      style=\"background-color: #242437; color: white\"\n      (click)=\"createLab()\"\n    >\n      Create Lab\n    </button>\n  </div>\n</div>\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"sno\">\n      <th mat-header-cell *matHeaderCellDef>S.No</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.sno }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"labname\">\n      <th mat-header-cell *matHeaderCellDef>Lab Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.labname }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"contactname\">\n      <th mat-header-cell *matHeaderCellDef>Contact Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.contactname }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"contactnopri\">\n      <th mat-header-cell *matHeaderCellDef>Contact No</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.contactnopri }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Mail ID</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-icon\n          style=\"margin-right: 1rem\"\n          (click)=\"editMethod(element['_id'])\"\n          >edit</mat-icon\n        >\n        <mat-icon\n          style=\"margin-right: 1rem\"\n          (click)=\"viewMethod(element['_id'])\"\n          >visibility</mat-icon\n        >\n        <mat-icon (click)=\"deleteMethod(element['_id'])\">delete</mat-icon>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  <mat-paginator\n    [pageSizeOptions]=\"[5, 10, 20]\"\n    showFirstLastButtons\n  ></mat-paginator>\n</div>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { EditComponent } from \"./edit/edit.component\";\nimport { ViewComponent } from \"./view/view.component\";\nimport { DeleteComponent } from \"./delete/delete.component\";\n\nimport { AppService } from \"./app.service\";\nimport { GoogleMapComponent } from './google-map/google-map.component';\nimport { AgmCoreModule } from '@agm/core';\n\n@NgModule({\n  declarations: [AppComponent, EditComponent, ViewComponent, DeleteComponent, GoogleMapComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyD0QFV-2oAVVgMt924mDv0R-5uGjSMcc84'\n    })\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent],\n  schemas:  [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AppModule {}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AppService {\n  dburl = \"/api/\";\n  weburl = \"https://api.countrystatecity.in/v1/countries\";\n  apikey = \"eTZiYVBsQXZRMFBYdE1McEhuZ1M3VG1PM0N2VGYyajdPb004OWFTaA==\";\n\n  public getAllLabs(): Observable<any> {\n    return this.http.get<any>(this.dburl + \"labs\");\n  }\n\n  public createLab(lab): Observable<any> {\n    return this.http.post<any>(this.dburl + \"lab\", lab);\n  }\n\n  public getLabById(id): Observable<any> {\n    return this.http.get<any>(this.dburl + \"lab/\" + id);\n  }\n\n  public updateLab(lab, id): Observable<any> {\n    return this.http.put<any>(this.dburl + \"lab/\" + id, lab);\n  }\n\n  public deleteLabById(id): Observable<any> {\n    return this.http.delete<any>(this.dburl + \"lab/\" + id);\n  }\n\n  public getCountries(): Observable<any> {\n    const headers = new HttpHeaders({\n      \"X-CSCAPI-KEY\": this.apikey,\n    });\n    return this.http.get<any>(this.weburl, { headers: headers });\n  }\n\n  public getStates(country): Observable<any> {\n    const headers = new HttpHeaders({\n      \"X-CSCAPI-KEY\": this.apikey,\n    });\n    return this.http.get<any>(this.weburl + \"/\" + country + \"/states\", {\n      headers: headers,\n    });\n  }\n\n  public getCities(country, state): Observable<any> {\n    const headers = new HttpHeaders({\n      \"X-CSCAPI-KEY\": this.apikey,\n    });\n    return this.http.get<any>(\n      this.weburl + \"/\" + country + \"/states/\" + state + \"/cities\",\n      { headers: headers }\n    );\n  }\n\n  public getAddress(lat, lng): Observable<any> {\n    return this.http.get<any>(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=AIzaSyD0QFV-2oAVVgMt924mDv0R-5uGjSMcc84`);\n  }\n\n  constructor(private http: HttpClient) {}\n}\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { AppService } from \"../app.service\";\n\n@Component({\n  selector: \"app-delete\",\n  templateUrl: \"./delete.component.html\",\n  styleUrls: [\"./delete.component.css\"],\n})\nexport class DeleteComponent implements OnInit {\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ok(): void {\n    this.appService.deleteLabById(this.data.id).subscribe(\n      (res) => {\n        this.dialogRef.close(true);\n      },\n      (err) => {\n        console.log(\"err\", err);\n      }\n    );\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private appService: AppService\n  ) {}\n\n  ngOnInit(): void {}\n}\n","<div mat-dialog-content>\n  <h3>Are you sure, you want to delete this lab?</h3>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button (click)=\"onNoClick()\">\n    <mat-icon>cancel</mat-icon> No Thanks\n  </button>\n  <button\n    mat-raised-button\n    style=\"background-color: #242437; color: white\"\n    (click)=\"ok()\"\n  >\n    <mat-icon>check_circle</mat-icon> Yes\n  </button>\n</div>\n","<div class=\"row\">\n  <div class=\"col-lg-11\">\n    <h2 mat-dialog-title *ngIf=\"data; else fail\">Edit Lab</h2>\n    <ng-template #fail>\n      <h2 mat-dialog-title>Create Lab</h2>\n    </ng-template>\n  </div>\n  <div class=\"col-lg-1\">\n    <button\n      mat-button\n      class=\"close-icon pull-right\"\n      mat-dialog-close\n      style=\"background-color: white\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n</div>\n<hr />\n<form [formGroup]=\"labForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"row\">\n    <div class=\"col-lg-3\">\n      <div class=\"form-group\">\n        <label>Lab Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          formControlName=\"labname\"\n          required\n        />\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>E-mail</label>\n        <input type=\"email\" class=\"form-control\" formControlName=\"email\" />\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>GST No.</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"gstno\" />\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>Country</label>\n        <select\n          class=\"form-control\"\n          formControlName=\"country\"\n          (change)=\"loadState($event.target.value)\"\n        >\n          <option *ngFor=\"let country of countries\" [value]=\"country.iso2\">\n            {{ country.name }}\n          </option>\n        </select>\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>Area</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"area\" (click)=\"loadArea()\"/>\n      </div>\n      <br />\n      <button\n        mat-button\n        type=\"submit\"\n        style=\"background-color: #242437; color: white\"\n      >\n        Submit\n      </button>\n    </div>\n    <div class=\"col-lg-3\">\n      <div class=\"form-group\">\n        <label>Contact Name</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"contactname\" />\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>Website URL</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"websiteurl\" />\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>Service at Home</label>\n        <select class=\"form-control\" formControlName=\"serviceathome\">\n          <option>Yes</option>\n          <option>No</option>\n        </select>\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>State</label>\n        <select\n          class=\"form-control\"\n          formControlName=\"state\"\n          (change)=\"\n            loadCity(this.labForm.get('country').value, $event.target.value)\n          \"\n        >\n          <option *ngFor=\"let state of states\" [value]=\"state.iso2\">\n            {{ state.name }}\n          </option>\n        </select>\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>Land Mark</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"landmark\" />\n      </div>\n      <br />\n    </div>\n    <div class=\"col-lg-3\">\n      <div class=\"form-group\">\n        <label>Contact No (Primary)</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          formControlName=\"contactnopri\"\n        />\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>Register No.</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"registerno\" />\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>Lab Services</label>\n        <select class=\"form-control\" formControlName=\"labservices\">\n          <option>Full body checkup</option>\n        </select>\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>City</label>\n        <select class=\"form-control\" formControlName=\"city\">\n          <option *ngFor=\"let city of cities\" [value]=\"city.iso2\">\n            {{ city.name }}\n          </option>\n        </select>\n      </div>\n      <br />\n    </div>\n    <div class=\"col-lg-3\">\n      <div class=\"form-group\">\n        <label>Contact No (Secondary)</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          formControlName=\"contactnosec\"\n        />\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>Pan No.</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"panno\" />\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>Package Cost</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"packagecost\" />\n      </div>\n      <br />\n      <div class=\"form-group\">\n        <label>Pincode</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"pincode\" />\n      </div>\n      <br />\n    </div>\n  </div>\n</form>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { AppService } from \"../app.service\";\nimport { GoogleMapComponent } from \"../google-map/google-map.component\";\n\n@Component({\n  selector: \"app-edit\",\n  templateUrl: \"./edit.component.html\",\n  styleUrls: [\"./edit.component.css\"],\n})\nexport class EditComponent implements OnInit {\n  countries;\n  states;\n  cities;\n  labForm = this.fb.group({\n    labname: [this.data?.labname || \"\", Validators.required],\n    email: [this.data?.email || \"\"],\n    gstno: [this.data?.gstno || \"\"],\n    country: [this.data?.country || \"\"],\n    area: [this.data?.area || \"\"],\n    contactname: [this.data?.contactname || \"\"],\n    websiteurl: [this.data?.websiteurl || \"\"],\n    serviceathome: [this.data?.serviceathome || \"\"],\n    state: [this.data?.state || \"\"],\n    landmark: [this.data?.landmark || \"\"],\n    contactnopri: [this.data?.contactnopri || \"\"],\n    registerno: [this.data?.registerno || \"\"],\n    labservices: [this.data?.labservices || \"\"],\n    city: [this.data?.city || \"\"],\n    contactnosec: [this.data?.contactnosec || \"\"],\n    panno: [this.data?.panno || \"\"],\n    packagecost: [this.data?.packagecost || \"\"],\n    pincode: [this.data?.pincode || \"\"],\n  });\n\n  onSubmit() {\n    if (this.data?.id) {\n      this.appService.updateLab(this.labForm.value, this.data.id).subscribe(\n        (res) => {\n          this.dialogRef.close(true);\n        },\n        (err) => {\n          console.log(\"err\", err);\n        }\n      );\n    } else {\n      this.appService.createLab(this.labForm.value).subscribe(\n        (res) => {\n          this.dialogRef.close(true);\n        },\n        (err) => {\n          console.log(\"err\", err);\n        }\n      );\n    }\n  }\n\n  loadState(country) {\n    this.appService.getStates(country).subscribe(\n      (res) => {\n        this.states = res;\n      },\n      (err) => {\n        console.log(\"err\", err);\n      }\n    );\n  }\n\n  loadCity(country, state) {\n    this.appService.getCities(country, state).subscribe(\n      (res) => {\n        this.cities = res;\n      },\n      (err) => {\n        console.log(\"err\", err);\n      }\n    );\n  }\n\n  loadArea() {\n    const dialogRef = this.dialog.open(GoogleMapComponent, {\n      width: \"80%\",\n      disableClose: true,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result !== undefined) {\n        this.labForm.get('area').setValue(result);\n      }\n    });\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<EditComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private appService: AppService,\n    public dialog: MatDialog,\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data?.id) {\n      this.appService.getLabById(this.data.id).subscribe(\n        (res) => {\n          let { _id, __v, ...val } = res;\n          this.labForm.setValue(val);\n          this.loadState(val.country);\n          this.loadCity(val.country, val.state);\n        },\n        (err) => {\n          console.log(\"err\", err);\n        }\n      );\n    }\n    this.appService.getCountries().subscribe(\n      (res) => {\n        this.countries = res;\n      },\n      (err) => {\n        console.log(\"err\", err);\n      }\n    );\n  }\n}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { AgmMap } from '@agm/core';\nimport { AppService } from '../app.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-google-map',\n  templateUrl: './google-map.component.html',\n  styleUrls: ['./google-map.component.css']\n})\nexport class GoogleMapComponent implements OnInit {\n\n  lat: number = 51.678418;\n  lng: number = 7.809007;\n  value;\n\n  mapReadyHandler(map: google.maps.Map): void {\n    map.addListener('click', (e: google.maps.MouseEvent) => {\n      this.zone.run(() => {\n        console.log(e.latLng.lat(), e.latLng.lng());\n        this.lat = e.latLng.lat();\n        this.lng = e.latLng.lng();\n        this.appService.getAddress(this.lat, this.lng).subscribe(\n          res => {\n            console.log('res <<< ', res);\n            this.value = \"No.2, Sugarnadi complex, Nehru Nagar\";\n          }\n        )\n      });\n    });\n  }\n\n  submit() {\n    this.dialogRef.close(this.value);\n  }\n\n  constructor(private zone: NgZone, private appService: AppService, public dialogRef: MatDialogRef<GoogleMapComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-lg-11\">\n    <h2 mat-dialog-title>Search area</h2>\n  </div>\n  <div class=\"col-lg-1\">\n    <button\n      mat-button\n      class=\"close-icon pull-right\"\n      mat-dialog-close\n      style=\"background-color: white\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n</div>\n<hr />\n<div class=\"row\">\n  <div class=\"col-lg-11\">\n    <div class=\"form-group\">\n      <input type=\"text\" placeholder=\"Search\" class=\"form-control\" [(ngModel)]=\"value\"/>\n    </div>\n  </div>\n  <div class=\"col-lg-1\">\n    <button mat-button style=\"color: white; background-color: #242437\" (click)=\"submit()\">\n      Submit\n    </button>\n  </div>\n</div>\n<br />\n<agm-map [latitude]=\"lat\" [longitude]=\"lng\" (mapReady)=\"mapReadyHandler($event)\">\n  <agm-marker [latitude]=\"lat\" [longitude]=\"lng\">\n    <agm-info-window>\n      <strong>InfoWindow content</strong>\n    </agm-info-window>\n  </agm-marker>\n</agm-map>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { AppService } from \"../app.service\";\n\n@Component({\n  selector: \"app-view\",\n  templateUrl: \"./view.component.html\",\n  styleUrls: [\"./view.component.css\"],\n})\nexport class ViewComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<ViewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private appService: AppService\n  ) {}\n\n  ngOnInit(): void {\n    this.appService.getLabById(this.data.id).subscribe(\n      (res) => {\n        this.data = res;\n      },\n      (err) => {\n        console.log(\"err\", err);\n      }\n    );\n  }\n}\n","<h2 mat-dialog-title>Lab Information</h2>\n<mat-dialog-content>\n  <table class=\"table borderless\">\n    <tbody>\n      <tr>\n        <td><h3 class=\"text-right\">Lab Name:</h3></td>\n        <td>\n          <h3>{{ data.labname }}</h3>\n        </td>\n      </tr>\n      <tr>\n        <td><h3 class=\"text-right\">Contact Name :</h3></td>\n        <td>\n          <h3>{{ data.contactname }}</h3>\n        </td>\n      </tr>\n      <tr>\n        <td><h3 class=\"text-right\">Contact No :</h3></td>\n        <td>\n          <h3>{{ data.contactnopri }}</h3>\n        </td>\n      </tr>\n      <tr>\n        <td><h3 class=\"text-right\">Email :</h3></td>\n        <td>\n          <h3>{{ data.email }}</h3>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button\n    mat-button\n    mat-dialog-close\n    style=\"background-color: #242437; color: white\"\n  >\n    Close\n  </button>\n</mat-dialog-actions>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}